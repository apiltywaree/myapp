npm install --save package-name //this will add new package to node_modules

global - package required before running application
npm install -g @angular/cli -d -> it will pick dev dependencies in package.json
default angular port: 4200
Bootstrap: it helps to make app responsive
Grid classes: a row is divided into 12 columns
xs,sm,md,lg
Angular will have code in .ts typescript and compiler will change to js
Angular will read angular.json first
We write our code in src folder

to change port
ng serve --port 8900 : app will run in 8900 port
app folder:
asset: all static content like js, css, images,
environment: app is in prod or dev
browser list: info about which browser it supports
index.html: browser will load index.html as base file
main.ts: after angular.json file main.ts will load/execute

Modules: all declaration done here
Components: contains html, css and logic
Pipe: Runtime transformation like discount applied to amount from DB
app.module.ts: just indication content inside it will make it module or component, doesnot depend on file name
app.component.ts: just indication content inside it will make it module or component, doesnot depend on file name
Every file will have import, decorator and export

Service: connect DB, backend or APIs
Routing: routing between pages

https://codeburst.io/getting-started-with-angular-7-and-bootstrap-4-styling-6011b206080
// in your terminal in the root of your project
npm install bootstrap jquery popper

install bootstrap
npm install bootstrap@3 jquery --save

uninstall bootstrap
npm -g uninstall bootstrap --save

install moment
npm install --save moment

/*

git init
git add .
git commit -m "first commit"
git remote add origin https://github.com/Aakashdeveloper/gitlearn.git
git push -u origin master
*/

cli
ng new firstapp
ng g c music/ ng generate component music
ng g s musicservice
ng g m module
ng g p pipe

///
product app
>>ng build --prod
This will build dist folder with some resources, all resources inside this folder should be added to ang-app folder
in production.

// email contact
ahanda205@gmail.com

//Localization
If we run the application now with “npm start” we are going to see the en-US version of a long date.
March 20, 2018 at 1:06:34 AM GMT+0

Let’s run it now with the command “npm run start:es”, now we are going to see the Spanish version of the date rendered.
20 de marzo de 2018, 0:55:01 GMT+0

/*
"i18nFile": "src/locale/messages.es.xlf",
            "i18nLocale": "es",
            "i18nFormat": "xlf",
            "aot": true,
            */

// to run app with i18n
ng serve --configuration=es

//for production
ng build --prod --i18n-file src/locale/messages.fr.xlf --i18n-format xlf --i18n-locale fr

inside build
  configurations
    add
    "es": {
                      "aot": true,
                      "outputPath": "dist/myapp-es/",
                      "baseHref": "/es/",
                      "i18nFile": "src/locale/messages.es.xlf",
                      "i18nFormat": "xlf",
                      "i18nLocale": "es",
                      "i18nMissingTranslation": "error"
                    }


in serve
  configurations
    add
    "es": {
              "browserTarget": "myapp:build:es"
            }
